/*
 * Default/22.200.001
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import model.BatchOvertimeRulesDetail;
import model.BooleanValue;
import model.CustomField;
import model.Entity;
import model.FileLink;
import model.StringValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * BatchOvertimeRules
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-17T14:29:48.617Z")
public class BatchOvertimeRules extends Entity {
  @SerializedName("ApplyOvertimeRulesfortheDocument")
  private BooleanValue applyOvertimeRulesfortheDocument = null;

  @SerializedName("OvertimeRulesDetails")
  private List<BatchOvertimeRulesDetail> overtimeRulesDetails = null;

  public BatchOvertimeRules applyOvertimeRulesfortheDocument(BooleanValue applyOvertimeRulesfortheDocument) {
    this.applyOvertimeRulesfortheDocument = applyOvertimeRulesfortheDocument;
    return this;
  }

   /**
   * Get applyOvertimeRulesfortheDocument
   * @return applyOvertimeRulesfortheDocument
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getApplyOvertimeRulesfortheDocument() {
    return applyOvertimeRulesfortheDocument;
  }

  public void setApplyOvertimeRulesfortheDocument(BooleanValue applyOvertimeRulesfortheDocument) {
    this.applyOvertimeRulesfortheDocument = applyOvertimeRulesfortheDocument;
  }

  public BatchOvertimeRules overtimeRulesDetails(List<BatchOvertimeRulesDetail> overtimeRulesDetails) {
    this.overtimeRulesDetails = overtimeRulesDetails;
    return this;
  }

  public BatchOvertimeRules addOvertimeRulesDetailsItem(BatchOvertimeRulesDetail overtimeRulesDetailsItem) {
    if (this.overtimeRulesDetails == null) {
      this.overtimeRulesDetails = new ArrayList<BatchOvertimeRulesDetail>();
    }
    this.overtimeRulesDetails.add(overtimeRulesDetailsItem);
    return this;
  }

   /**
   * Get overtimeRulesDetails
   * @return overtimeRulesDetails
  **/
  @ApiModelProperty(value = "")
  public List<BatchOvertimeRulesDetail> getOvertimeRulesDetails() {
    return overtimeRulesDetails;
  }

  public void setOvertimeRulesDetails(List<BatchOvertimeRulesDetail> overtimeRulesDetails) {
    this.overtimeRulesDetails = overtimeRulesDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchOvertimeRules batchOvertimeRules = (BatchOvertimeRules) o;
    return Objects.equals(this.applyOvertimeRulesfortheDocument, batchOvertimeRules.applyOvertimeRulesfortheDocument) &&
        Objects.equals(this.overtimeRulesDetails, batchOvertimeRules.overtimeRulesDetails) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyOvertimeRulesfortheDocument, overtimeRulesDetails, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchOvertimeRules {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    applyOvertimeRulesfortheDocument: ").append(toIndentedString(applyOvertimeRulesfortheDocument)).append("\n");
    sb.append("    overtimeRulesDetails: ").append(toIndentedString(overtimeRulesDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

