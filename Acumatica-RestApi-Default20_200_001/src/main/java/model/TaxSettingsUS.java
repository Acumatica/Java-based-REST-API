/*
 * Default/22.200.001
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import model.BooleanValue;
import model.CustomField;
import model.DeductionOrBenefitTaxDetailUS;
import model.Entity;
import model.FileLink;
import model.StringValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * TaxSettingsUS
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-17T14:29:48.617Z")
public class TaxSettingsUS extends Entity {
  @SerializedName("AllowSupplementalElection")
  private BooleanValue allowSupplementalElection = null;

  @SerializedName("CodeType")
  private StringValue codeType = null;

  @SerializedName("ImpactonTaxableWage")
  private StringValue impactonTaxableWage = null;

  @SerializedName("TaxDetailsUS")
  private List<DeductionOrBenefitTaxDetailUS> taxDetailsUS = null;

  public TaxSettingsUS allowSupplementalElection(BooleanValue allowSupplementalElection) {
    this.allowSupplementalElection = allowSupplementalElection;
    return this;
  }

   /**
   * Get allowSupplementalElection
   * @return allowSupplementalElection
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getAllowSupplementalElection() {
    return allowSupplementalElection;
  }

  public void setAllowSupplementalElection(BooleanValue allowSupplementalElection) {
    this.allowSupplementalElection = allowSupplementalElection;
  }

  public TaxSettingsUS codeType(StringValue codeType) {
    this.codeType = codeType;
    return this;
  }

   /**
   * Get codeType
   * @return codeType
  **/
  @ApiModelProperty(value = "")
  public StringValue getCodeType() {
    return codeType;
  }

  public void setCodeType(StringValue codeType) {
    this.codeType = codeType;
  }

  public TaxSettingsUS impactonTaxableWage(StringValue impactonTaxableWage) {
    this.impactonTaxableWage = impactonTaxableWage;
    return this;
  }

   /**
   * Get impactonTaxableWage
   * @return impactonTaxableWage
  **/
  @ApiModelProperty(value = "")
  public StringValue getImpactonTaxableWage() {
    return impactonTaxableWage;
  }

  public void setImpactonTaxableWage(StringValue impactonTaxableWage) {
    this.impactonTaxableWage = impactonTaxableWage;
  }

  public TaxSettingsUS taxDetailsUS(List<DeductionOrBenefitTaxDetailUS> taxDetailsUS) {
    this.taxDetailsUS = taxDetailsUS;
    return this;
  }

  public TaxSettingsUS addTaxDetailsUSItem(DeductionOrBenefitTaxDetailUS taxDetailsUSItem) {
    if (this.taxDetailsUS == null) {
      this.taxDetailsUS = new ArrayList<DeductionOrBenefitTaxDetailUS>();
    }
    this.taxDetailsUS.add(taxDetailsUSItem);
    return this;
  }

   /**
   * Get taxDetailsUS
   * @return taxDetailsUS
  **/
  @ApiModelProperty(value = "")
  public List<DeductionOrBenefitTaxDetailUS> getTaxDetailsUS() {
    return taxDetailsUS;
  }

  public void setTaxDetailsUS(List<DeductionOrBenefitTaxDetailUS> taxDetailsUS) {
    this.taxDetailsUS = taxDetailsUS;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxSettingsUS taxSettingsUS = (TaxSettingsUS) o;
    return Objects.equals(this.allowSupplementalElection, taxSettingsUS.allowSupplementalElection) &&
        Objects.equals(this.codeType, taxSettingsUS.codeType) &&
        Objects.equals(this.impactonTaxableWage, taxSettingsUS.impactonTaxableWage) &&
        Objects.equals(this.taxDetailsUS, taxSettingsUS.taxDetailsUS) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowSupplementalElection, codeType, impactonTaxableWage, taxDetailsUS, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxSettingsUS {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    allowSupplementalElection: ").append(toIndentedString(allowSupplementalElection)).append("\n");
    sb.append("    codeType: ").append(toIndentedString(codeType)).append("\n");
    sb.append("    impactonTaxableWage: ").append(toIndentedString(impactonTaxableWage)).append("\n");
    sb.append("    taxDetailsUS: ").append(toIndentedString(taxDetailsUS)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

