/*
 * Default/22.200.001
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import model.Address;
import model.BooleanValue;
import model.CompensationDetail;
import model.CustomField;
import model.DateTimeValue;
import model.DeductionsAndBenefits;
import model.DirectDepositDetail;
import model.EmployeeGLAccounts;
import model.EmployeeGeneralInfo;
import model.EmployeePaidTimeOff;
import model.EmployeeTaxDetail;
import model.EmployeeWorkLocations;
import model.EmploymentDates;
import model.EmploymentRecord;
import model.Entity;
import model.FileLink;
import model.StringValue;
import model.TaxSettingDetail;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * EmployeePayrollSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-17T14:29:48.617Z")
public class EmployeePayrollSettings extends Entity {
  @SerializedName("Active")
  private BooleanValue active = null;

  @SerializedName("AddressInfo")
  private Address addressInfo = null;

  @SerializedName("CashAccount")
  private StringValue cashAccount = null;

  @SerializedName("ClassID")
  private StringValue classID = null;

  @SerializedName("Compensation")
  private List<CompensationDetail> compensation = null;

  @SerializedName("DeductionsAndBenefits")
  private DeductionsAndBenefits deductionsAndBenefits = null;

  @SerializedName("DirectDepositDetails")
  private List<DirectDepositDetail> directDepositDetails = null;

  @SerializedName("EmployeeID")
  private StringValue employeeID = null;

  @SerializedName("EmployeeName")
  private StringValue employeeName = null;

  @SerializedName("EmployeeType")
  private StringValue employeeType = null;

  @SerializedName("EmploymentDates")
  private EmploymentDates employmentDates = null;

  @SerializedName("EmploymentRecords")
  private List<EmploymentRecord> employmentRecords = null;

  @SerializedName("GeneralInfo")
  private EmployeeGeneralInfo generalInfo = null;

  @SerializedName("GLAccounts")
  private EmployeeGLAccounts glAccounts = null;

  @SerializedName("LastModifiedDateTime")
  private DateTimeValue lastModifiedDateTime = null;

  @SerializedName("PaidTimeOff")
  private EmployeePaidTimeOff paidTimeOff = null;

  @SerializedName("PaymentMethod")
  private StringValue paymentMethod = null;

  @SerializedName("Taxes")
  private List<EmployeeTaxDetail> taxes = null;

  @SerializedName("TaxSettings")
  private List<TaxSettingDetail> taxSettings = null;

  @SerializedName("EmployeeTypeClassDefault")
  private BooleanValue employeeTypeClassDefault = null;

  @SerializedName("WorkLocations")
  private EmployeeWorkLocations workLocations = null;

  public EmployeePayrollSettings active(BooleanValue active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getActive() {
    return active;
  }

  public void setActive(BooleanValue active) {
    this.active = active;
  }

  public EmployeePayrollSettings addressInfo(Address addressInfo) {
    this.addressInfo = addressInfo;
    return this;
  }

   /**
   * Get addressInfo
   * @return addressInfo
  **/
  @ApiModelProperty(value = "")
  public Address getAddressInfo() {
    return addressInfo;
  }

  public void setAddressInfo(Address addressInfo) {
    this.addressInfo = addressInfo;
  }

  public EmployeePayrollSettings cashAccount(StringValue cashAccount) {
    this.cashAccount = cashAccount;
    return this;
  }

   /**
   * Get cashAccount
   * @return cashAccount
  **/
  @ApiModelProperty(value = "")
  public StringValue getCashAccount() {
    return cashAccount;
  }

  public void setCashAccount(StringValue cashAccount) {
    this.cashAccount = cashAccount;
  }

  public EmployeePayrollSettings classID(StringValue classID) {
    this.classID = classID;
    return this;
  }

   /**
   * Get classID
   * @return classID
  **/
  @ApiModelProperty(value = "")
  public StringValue getClassID() {
    return classID;
  }

  public void setClassID(StringValue classID) {
    this.classID = classID;
  }

  public EmployeePayrollSettings compensation(List<CompensationDetail> compensation) {
    this.compensation = compensation;
    return this;
  }

  public EmployeePayrollSettings addCompensationItem(CompensationDetail compensationItem) {
    if (this.compensation == null) {
      this.compensation = new ArrayList<CompensationDetail>();
    }
    this.compensation.add(compensationItem);
    return this;
  }

   /**
   * Get compensation
   * @return compensation
  **/
  @ApiModelProperty(value = "")
  public List<CompensationDetail> getCompensation() {
    return compensation;
  }

  public void setCompensation(List<CompensationDetail> compensation) {
    this.compensation = compensation;
  }

  public EmployeePayrollSettings deductionsAndBenefits(DeductionsAndBenefits deductionsAndBenefits) {
    this.deductionsAndBenefits = deductionsAndBenefits;
    return this;
  }

   /**
   * Get deductionsAndBenefits
   * @return deductionsAndBenefits
  **/
  @ApiModelProperty(value = "")
  public DeductionsAndBenefits getDeductionsAndBenefits() {
    return deductionsAndBenefits;
  }

  public void setDeductionsAndBenefits(DeductionsAndBenefits deductionsAndBenefits) {
    this.deductionsAndBenefits = deductionsAndBenefits;
  }

  public EmployeePayrollSettings directDepositDetails(List<DirectDepositDetail> directDepositDetails) {
    this.directDepositDetails = directDepositDetails;
    return this;
  }

  public EmployeePayrollSettings addDirectDepositDetailsItem(DirectDepositDetail directDepositDetailsItem) {
    if (this.directDepositDetails == null) {
      this.directDepositDetails = new ArrayList<DirectDepositDetail>();
    }
    this.directDepositDetails.add(directDepositDetailsItem);
    return this;
  }

   /**
   * Get directDepositDetails
   * @return directDepositDetails
  **/
  @ApiModelProperty(value = "")
  public List<DirectDepositDetail> getDirectDepositDetails() {
    return directDepositDetails;
  }

  public void setDirectDepositDetails(List<DirectDepositDetail> directDepositDetails) {
    this.directDepositDetails = directDepositDetails;
  }

  public EmployeePayrollSettings employeeID(StringValue employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Get employeeID
   * @return employeeID
  **/
  @ApiModelProperty(value = "")
  public StringValue getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(StringValue employeeID) {
    this.employeeID = employeeID;
  }

  public EmployeePayrollSettings employeeName(StringValue employeeName) {
    this.employeeName = employeeName;
    return this;
  }

   /**
   * Get employeeName
   * @return employeeName
  **/
  @ApiModelProperty(value = "")
  public StringValue getEmployeeName() {
    return employeeName;
  }

  public void setEmployeeName(StringValue employeeName) {
    this.employeeName = employeeName;
  }

  public EmployeePayrollSettings employeeType(StringValue employeeType) {
    this.employeeType = employeeType;
    return this;
  }

   /**
   * Get employeeType
   * @return employeeType
  **/
  @ApiModelProperty(value = "")
  public StringValue getEmployeeType() {
    return employeeType;
  }

  public void setEmployeeType(StringValue employeeType) {
    this.employeeType = employeeType;
  }

  public EmployeePayrollSettings employmentDates(EmploymentDates employmentDates) {
    this.employmentDates = employmentDates;
    return this;
  }

   /**
   * Get employmentDates
   * @return employmentDates
  **/
  @ApiModelProperty(value = "")
  public EmploymentDates getEmploymentDates() {
    return employmentDates;
  }

  public void setEmploymentDates(EmploymentDates employmentDates) {
    this.employmentDates = employmentDates;
  }

  public EmployeePayrollSettings employmentRecords(List<EmploymentRecord> employmentRecords) {
    this.employmentRecords = employmentRecords;
    return this;
  }

  public EmployeePayrollSettings addEmploymentRecordsItem(EmploymentRecord employmentRecordsItem) {
    if (this.employmentRecords == null) {
      this.employmentRecords = new ArrayList<EmploymentRecord>();
    }
    this.employmentRecords.add(employmentRecordsItem);
    return this;
  }

   /**
   * Get employmentRecords
   * @return employmentRecords
  **/
  @ApiModelProperty(value = "")
  public List<EmploymentRecord> getEmploymentRecords() {
    return employmentRecords;
  }

  public void setEmploymentRecords(List<EmploymentRecord> employmentRecords) {
    this.employmentRecords = employmentRecords;
  }

  public EmployeePayrollSettings generalInfo(EmployeeGeneralInfo generalInfo) {
    this.generalInfo = generalInfo;
    return this;
  }

   /**
   * Get generalInfo
   * @return generalInfo
  **/
  @ApiModelProperty(value = "")
  public EmployeeGeneralInfo getGeneralInfo() {
    return generalInfo;
  }

  public void setGeneralInfo(EmployeeGeneralInfo generalInfo) {
    this.generalInfo = generalInfo;
  }

  public EmployeePayrollSettings glAccounts(EmployeeGLAccounts glAccounts) {
    this.glAccounts = glAccounts;
    return this;
  }

   /**
   * Get glAccounts
   * @return glAccounts
  **/
  @ApiModelProperty(value = "")
  public EmployeeGLAccounts getGlAccounts() {
    return glAccounts;
  }

  public void setGlAccounts(EmployeeGLAccounts glAccounts) {
    this.glAccounts = glAccounts;
  }

  public EmployeePayrollSettings lastModifiedDateTime(DateTimeValue lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public DateTimeValue getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(DateTimeValue lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public EmployeePayrollSettings paidTimeOff(EmployeePaidTimeOff paidTimeOff) {
    this.paidTimeOff = paidTimeOff;
    return this;
  }

   /**
   * Get paidTimeOff
   * @return paidTimeOff
  **/
  @ApiModelProperty(value = "")
  public EmployeePaidTimeOff getPaidTimeOff() {
    return paidTimeOff;
  }

  public void setPaidTimeOff(EmployeePaidTimeOff paidTimeOff) {
    this.paidTimeOff = paidTimeOff;
  }

  public EmployeePayrollSettings paymentMethod(StringValue paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public StringValue getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(StringValue paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public EmployeePayrollSettings taxes(List<EmployeeTaxDetail> taxes) {
    this.taxes = taxes;
    return this;
  }

  public EmployeePayrollSettings addTaxesItem(EmployeeTaxDetail taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<EmployeeTaxDetail>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @ApiModelProperty(value = "")
  public List<EmployeeTaxDetail> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<EmployeeTaxDetail> taxes) {
    this.taxes = taxes;
  }

  public EmployeePayrollSettings taxSettings(List<TaxSettingDetail> taxSettings) {
    this.taxSettings = taxSettings;
    return this;
  }

  public EmployeePayrollSettings addTaxSettingsItem(TaxSettingDetail taxSettingsItem) {
    if (this.taxSettings == null) {
      this.taxSettings = new ArrayList<TaxSettingDetail>();
    }
    this.taxSettings.add(taxSettingsItem);
    return this;
  }

   /**
   * Get taxSettings
   * @return taxSettings
  **/
  @ApiModelProperty(value = "")
  public List<TaxSettingDetail> getTaxSettings() {
    return taxSettings;
  }

  public void setTaxSettings(List<TaxSettingDetail> taxSettings) {
    this.taxSettings = taxSettings;
  }

  public EmployeePayrollSettings employeeTypeClassDefault(BooleanValue employeeTypeClassDefault) {
    this.employeeTypeClassDefault = employeeTypeClassDefault;
    return this;
  }

   /**
   * Get employeeTypeClassDefault
   * @return employeeTypeClassDefault
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getEmployeeTypeClassDefault() {
    return employeeTypeClassDefault;
  }

  public void setEmployeeTypeClassDefault(BooleanValue employeeTypeClassDefault) {
    this.employeeTypeClassDefault = employeeTypeClassDefault;
  }

  public EmployeePayrollSettings workLocations(EmployeeWorkLocations workLocations) {
    this.workLocations = workLocations;
    return this;
  }

   /**
   * Get workLocations
   * @return workLocations
  **/
  @ApiModelProperty(value = "")
  public EmployeeWorkLocations getWorkLocations() {
    return workLocations;
  }

  public void setWorkLocations(EmployeeWorkLocations workLocations) {
    this.workLocations = workLocations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePayrollSettings employeePayrollSettings = (EmployeePayrollSettings) o;
    return Objects.equals(this.active, employeePayrollSettings.active) &&
        Objects.equals(this.addressInfo, employeePayrollSettings.addressInfo) &&
        Objects.equals(this.cashAccount, employeePayrollSettings.cashAccount) &&
        Objects.equals(this.classID, employeePayrollSettings.classID) &&
        Objects.equals(this.compensation, employeePayrollSettings.compensation) &&
        Objects.equals(this.deductionsAndBenefits, employeePayrollSettings.deductionsAndBenefits) &&
        Objects.equals(this.directDepositDetails, employeePayrollSettings.directDepositDetails) &&
        Objects.equals(this.employeeID, employeePayrollSettings.employeeID) &&
        Objects.equals(this.employeeName, employeePayrollSettings.employeeName) &&
        Objects.equals(this.employeeType, employeePayrollSettings.employeeType) &&
        Objects.equals(this.employmentDates, employeePayrollSettings.employmentDates) &&
        Objects.equals(this.employmentRecords, employeePayrollSettings.employmentRecords) &&
        Objects.equals(this.generalInfo, employeePayrollSettings.generalInfo) &&
        Objects.equals(this.glAccounts, employeePayrollSettings.glAccounts) &&
        Objects.equals(this.lastModifiedDateTime, employeePayrollSettings.lastModifiedDateTime) &&
        Objects.equals(this.paidTimeOff, employeePayrollSettings.paidTimeOff) &&
        Objects.equals(this.paymentMethod, employeePayrollSettings.paymentMethod) &&
        Objects.equals(this.taxes, employeePayrollSettings.taxes) &&
        Objects.equals(this.taxSettings, employeePayrollSettings.taxSettings) &&
        Objects.equals(this.employeeTypeClassDefault, employeePayrollSettings.employeeTypeClassDefault) &&
        Objects.equals(this.workLocations, employeePayrollSettings.workLocations) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, addressInfo, cashAccount, classID, compensation, deductionsAndBenefits, directDepositDetails, employeeID, employeeName, employeeType, employmentDates, employmentRecords, generalInfo, glAccounts, lastModifiedDateTime, paidTimeOff, paymentMethod, taxes, taxSettings, employeeTypeClassDefault, workLocations, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePayrollSettings {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    addressInfo: ").append(toIndentedString(addressInfo)).append("\n");
    sb.append("    cashAccount: ").append(toIndentedString(cashAccount)).append("\n");
    sb.append("    classID: ").append(toIndentedString(classID)).append("\n");
    sb.append("    compensation: ").append(toIndentedString(compensation)).append("\n");
    sb.append("    deductionsAndBenefits: ").append(toIndentedString(deductionsAndBenefits)).append("\n");
    sb.append("    directDepositDetails: ").append(toIndentedString(directDepositDetails)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    employeeName: ").append(toIndentedString(employeeName)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    employmentDates: ").append(toIndentedString(employmentDates)).append("\n");
    sb.append("    employmentRecords: ").append(toIndentedString(employmentRecords)).append("\n");
    sb.append("    generalInfo: ").append(toIndentedString(generalInfo)).append("\n");
    sb.append("    glAccounts: ").append(toIndentedString(glAccounts)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    paidTimeOff: ").append(toIndentedString(paidTimeOff)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    taxSettings: ").append(toIndentedString(taxSettings)).append("\n");
    sb.append("    employeeTypeClassDefault: ").append(toIndentedString(employeeTypeClassDefault)).append("\n");
    sb.append("    workLocations: ").append(toIndentedString(workLocations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

