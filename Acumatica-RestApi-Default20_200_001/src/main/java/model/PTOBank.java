/*
 * Default/22.200.001
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import model.BooleanValue;
import model.CustomField;
import model.DateTimeValue;
import model.DecimalValue;
import model.Entity;
import model.FileLink;
import model.IntValue;
import model.PTOBankGLAccounts;
import model.StringValue;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * PTOBank
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-17T14:29:48.617Z")
public class PTOBank extends Entity {
  @SerializedName("AccrualLimit")
  private DecimalValue accrualLimit = null;

  @SerializedName("AccrualMethod")
  private StringValue accrualMethod = null;

  @SerializedName("AccrueonCertifiedJobOnly")
  private BooleanValue accrueonCertifiedJobOnly = null;

  @SerializedName("Active")
  private BooleanValue active = null;

  @SerializedName("AllowNegativeBalance")
  private BooleanValue allowNegativeBalance = null;

  @SerializedName("BankStartDate")
  private DateTimeValue bankStartDate = null;

  @SerializedName("CanOnlyDisbursefromCarryover")
  private BooleanValue canOnlyDisbursefromCarryover = null;

  @SerializedName("CarryoverAmount")
  private DecimalValue carryoverAmount = null;

  @SerializedName("CarryoverType")
  private StringValue carryoverType = null;

  @SerializedName("CreateFinTransactions")
  private BooleanValue createFinTransactions = null;

  @SerializedName("DefaultAccrualPercent")
  private DecimalValue defaultAccrualPercent = null;

  @SerializedName("DefaultDisbursingType")
  private StringValue defaultDisbursingType = null;

  @SerializedName("Description")
  private StringValue description = null;

  @SerializedName("DisbursingEarningCode")
  private StringValue disbursingEarningCode = null;

  @SerializedName("FrontLoadingAmount")
  private DecimalValue frontLoadingAmount = null;

  @SerializedName("GLAccounts")
  private PTOBankGLAccounts glAccounts = null;

  @SerializedName("LastModifiedDateTime")
  private DateTimeValue lastModifiedDateTime = null;

  @SerializedName("OnSettlement")
  private StringValue onSettlement = null;

  @SerializedName("PayCarryoverafterMonths")
  private IntValue payCarryoverafterMonths = null;

  @SerializedName("PTOBankID")
  private StringValue ptOBankID = null;

  public PTOBank accrualLimit(DecimalValue accrualLimit) {
    this.accrualLimit = accrualLimit;
    return this;
  }

   /**
   * Get accrualLimit
   * @return accrualLimit
  **/
  @ApiModelProperty(value = "")
  public DecimalValue getAccrualLimit() {
    return accrualLimit;
  }

  public void setAccrualLimit(DecimalValue accrualLimit) {
    this.accrualLimit = accrualLimit;
  }

  public PTOBank accrualMethod(StringValue accrualMethod) {
    this.accrualMethod = accrualMethod;
    return this;
  }

   /**
   * Get accrualMethod
   * @return accrualMethod
  **/
  @ApiModelProperty(value = "")
  public StringValue getAccrualMethod() {
    return accrualMethod;
  }

  public void setAccrualMethod(StringValue accrualMethod) {
    this.accrualMethod = accrualMethod;
  }

  public PTOBank accrueonCertifiedJobOnly(BooleanValue accrueonCertifiedJobOnly) {
    this.accrueonCertifiedJobOnly = accrueonCertifiedJobOnly;
    return this;
  }

   /**
   * Get accrueonCertifiedJobOnly
   * @return accrueonCertifiedJobOnly
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getAccrueonCertifiedJobOnly() {
    return accrueonCertifiedJobOnly;
  }

  public void setAccrueonCertifiedJobOnly(BooleanValue accrueonCertifiedJobOnly) {
    this.accrueonCertifiedJobOnly = accrueonCertifiedJobOnly;
  }

  public PTOBank active(BooleanValue active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getActive() {
    return active;
  }

  public void setActive(BooleanValue active) {
    this.active = active;
  }

  public PTOBank allowNegativeBalance(BooleanValue allowNegativeBalance) {
    this.allowNegativeBalance = allowNegativeBalance;
    return this;
  }

   /**
   * Get allowNegativeBalance
   * @return allowNegativeBalance
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getAllowNegativeBalance() {
    return allowNegativeBalance;
  }

  public void setAllowNegativeBalance(BooleanValue allowNegativeBalance) {
    this.allowNegativeBalance = allowNegativeBalance;
  }

  public PTOBank bankStartDate(DateTimeValue bankStartDate) {
    this.bankStartDate = bankStartDate;
    return this;
  }

   /**
   * Get bankStartDate
   * @return bankStartDate
  **/
  @ApiModelProperty(value = "")
  public DateTimeValue getBankStartDate() {
    return bankStartDate;
  }

  public void setBankStartDate(DateTimeValue bankStartDate) {
    this.bankStartDate = bankStartDate;
  }

  public PTOBank canOnlyDisbursefromCarryover(BooleanValue canOnlyDisbursefromCarryover) {
    this.canOnlyDisbursefromCarryover = canOnlyDisbursefromCarryover;
    return this;
  }

   /**
   * Get canOnlyDisbursefromCarryover
   * @return canOnlyDisbursefromCarryover
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getCanOnlyDisbursefromCarryover() {
    return canOnlyDisbursefromCarryover;
  }

  public void setCanOnlyDisbursefromCarryover(BooleanValue canOnlyDisbursefromCarryover) {
    this.canOnlyDisbursefromCarryover = canOnlyDisbursefromCarryover;
  }

  public PTOBank carryoverAmount(DecimalValue carryoverAmount) {
    this.carryoverAmount = carryoverAmount;
    return this;
  }

   /**
   * Get carryoverAmount
   * @return carryoverAmount
  **/
  @ApiModelProperty(value = "")
  public DecimalValue getCarryoverAmount() {
    return carryoverAmount;
  }

  public void setCarryoverAmount(DecimalValue carryoverAmount) {
    this.carryoverAmount = carryoverAmount;
  }

  public PTOBank carryoverType(StringValue carryoverType) {
    this.carryoverType = carryoverType;
    return this;
  }

   /**
   * Get carryoverType
   * @return carryoverType
  **/
  @ApiModelProperty(value = "")
  public StringValue getCarryoverType() {
    return carryoverType;
  }

  public void setCarryoverType(StringValue carryoverType) {
    this.carryoverType = carryoverType;
  }

  public PTOBank createFinTransactions(BooleanValue createFinTransactions) {
    this.createFinTransactions = createFinTransactions;
    return this;
  }

   /**
   * Get createFinTransactions
   * @return createFinTransactions
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getCreateFinTransactions() {
    return createFinTransactions;
  }

  public void setCreateFinTransactions(BooleanValue createFinTransactions) {
    this.createFinTransactions = createFinTransactions;
  }

  public PTOBank defaultAccrualPercent(DecimalValue defaultAccrualPercent) {
    this.defaultAccrualPercent = defaultAccrualPercent;
    return this;
  }

   /**
   * Get defaultAccrualPercent
   * @return defaultAccrualPercent
  **/
  @ApiModelProperty(value = "")
  public DecimalValue getDefaultAccrualPercent() {
    return defaultAccrualPercent;
  }

  public void setDefaultAccrualPercent(DecimalValue defaultAccrualPercent) {
    this.defaultAccrualPercent = defaultAccrualPercent;
  }

  public PTOBank defaultDisbursingType(StringValue defaultDisbursingType) {
    this.defaultDisbursingType = defaultDisbursingType;
    return this;
  }

   /**
   * Get defaultDisbursingType
   * @return defaultDisbursingType
  **/
  @ApiModelProperty(value = "")
  public StringValue getDefaultDisbursingType() {
    return defaultDisbursingType;
  }

  public void setDefaultDisbursingType(StringValue defaultDisbursingType) {
    this.defaultDisbursingType = defaultDisbursingType;
  }

  public PTOBank description(StringValue description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public StringValue getDescription() {
    return description;
  }

  public void setDescription(StringValue description) {
    this.description = description;
  }

  public PTOBank disbursingEarningCode(StringValue disbursingEarningCode) {
    this.disbursingEarningCode = disbursingEarningCode;
    return this;
  }

   /**
   * Get disbursingEarningCode
   * @return disbursingEarningCode
  **/
  @ApiModelProperty(value = "")
  public StringValue getDisbursingEarningCode() {
    return disbursingEarningCode;
  }

  public void setDisbursingEarningCode(StringValue disbursingEarningCode) {
    this.disbursingEarningCode = disbursingEarningCode;
  }

  public PTOBank frontLoadingAmount(DecimalValue frontLoadingAmount) {
    this.frontLoadingAmount = frontLoadingAmount;
    return this;
  }

   /**
   * Get frontLoadingAmount
   * @return frontLoadingAmount
  **/
  @ApiModelProperty(value = "")
  public DecimalValue getFrontLoadingAmount() {
    return frontLoadingAmount;
  }

  public void setFrontLoadingAmount(DecimalValue frontLoadingAmount) {
    this.frontLoadingAmount = frontLoadingAmount;
  }

  public PTOBank glAccounts(PTOBankGLAccounts glAccounts) {
    this.glAccounts = glAccounts;
    return this;
  }

   /**
   * Get glAccounts
   * @return glAccounts
  **/
  @ApiModelProperty(value = "")
  public PTOBankGLAccounts getGlAccounts() {
    return glAccounts;
  }

  public void setGlAccounts(PTOBankGLAccounts glAccounts) {
    this.glAccounts = glAccounts;
  }

  public PTOBank lastModifiedDateTime(DateTimeValue lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public DateTimeValue getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(DateTimeValue lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public PTOBank onSettlement(StringValue onSettlement) {
    this.onSettlement = onSettlement;
    return this;
  }

   /**
   * Get onSettlement
   * @return onSettlement
  **/
  @ApiModelProperty(value = "")
  public StringValue getOnSettlement() {
    return onSettlement;
  }

  public void setOnSettlement(StringValue onSettlement) {
    this.onSettlement = onSettlement;
  }

  public PTOBank payCarryoverafterMonths(IntValue payCarryoverafterMonths) {
    this.payCarryoverafterMonths = payCarryoverafterMonths;
    return this;
  }

   /**
   * Get payCarryoverafterMonths
   * @return payCarryoverafterMonths
  **/
  @ApiModelProperty(value = "")
  public IntValue getPayCarryoverafterMonths() {
    return payCarryoverafterMonths;
  }

  public void setPayCarryoverafterMonths(IntValue payCarryoverafterMonths) {
    this.payCarryoverafterMonths = payCarryoverafterMonths;
  }

  public PTOBank ptOBankID(StringValue ptOBankID) {
    this.ptOBankID = ptOBankID;
    return this;
  }

   /**
   * Get ptOBankID
   * @return ptOBankID
  **/
  @ApiModelProperty(value = "")
  public StringValue getPtOBankID() {
    return ptOBankID;
  }

  public void setPtOBankID(StringValue ptOBankID) {
    this.ptOBankID = ptOBankID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PTOBank ptOBank = (PTOBank) o;
    return Objects.equals(this.accrualLimit, ptOBank.accrualLimit) &&
        Objects.equals(this.accrualMethod, ptOBank.accrualMethod) &&
        Objects.equals(this.accrueonCertifiedJobOnly, ptOBank.accrueonCertifiedJobOnly) &&
        Objects.equals(this.active, ptOBank.active) &&
        Objects.equals(this.allowNegativeBalance, ptOBank.allowNegativeBalance) &&
        Objects.equals(this.bankStartDate, ptOBank.bankStartDate) &&
        Objects.equals(this.canOnlyDisbursefromCarryover, ptOBank.canOnlyDisbursefromCarryover) &&
        Objects.equals(this.carryoverAmount, ptOBank.carryoverAmount) &&
        Objects.equals(this.carryoverType, ptOBank.carryoverType) &&
        Objects.equals(this.createFinTransactions, ptOBank.createFinTransactions) &&
        Objects.equals(this.defaultAccrualPercent, ptOBank.defaultAccrualPercent) &&
        Objects.equals(this.defaultDisbursingType, ptOBank.defaultDisbursingType) &&
        Objects.equals(this.description, ptOBank.description) &&
        Objects.equals(this.disbursingEarningCode, ptOBank.disbursingEarningCode) &&
        Objects.equals(this.frontLoadingAmount, ptOBank.frontLoadingAmount) &&
        Objects.equals(this.glAccounts, ptOBank.glAccounts) &&
        Objects.equals(this.lastModifiedDateTime, ptOBank.lastModifiedDateTime) &&
        Objects.equals(this.onSettlement, ptOBank.onSettlement) &&
        Objects.equals(this.payCarryoverafterMonths, ptOBank.payCarryoverafterMonths) &&
        Objects.equals(this.ptOBankID, ptOBank.ptOBankID) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accrualLimit, accrualMethod, accrueonCertifiedJobOnly, active, allowNegativeBalance, bankStartDate, canOnlyDisbursefromCarryover, carryoverAmount, carryoverType, createFinTransactions, defaultAccrualPercent, defaultDisbursingType, description, disbursingEarningCode, frontLoadingAmount, glAccounts, lastModifiedDateTime, onSettlement, payCarryoverafterMonths, ptOBankID, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PTOBank {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accrualLimit: ").append(toIndentedString(accrualLimit)).append("\n");
    sb.append("    accrualMethod: ").append(toIndentedString(accrualMethod)).append("\n");
    sb.append("    accrueonCertifiedJobOnly: ").append(toIndentedString(accrueonCertifiedJobOnly)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    allowNegativeBalance: ").append(toIndentedString(allowNegativeBalance)).append("\n");
    sb.append("    bankStartDate: ").append(toIndentedString(bankStartDate)).append("\n");
    sb.append("    canOnlyDisbursefromCarryover: ").append(toIndentedString(canOnlyDisbursefromCarryover)).append("\n");
    sb.append("    carryoverAmount: ").append(toIndentedString(carryoverAmount)).append("\n");
    sb.append("    carryoverType: ").append(toIndentedString(carryoverType)).append("\n");
    sb.append("    createFinTransactions: ").append(toIndentedString(createFinTransactions)).append("\n");
    sb.append("    defaultAccrualPercent: ").append(toIndentedString(defaultAccrualPercent)).append("\n");
    sb.append("    defaultDisbursingType: ").append(toIndentedString(defaultDisbursingType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disbursingEarningCode: ").append(toIndentedString(disbursingEarningCode)).append("\n");
    sb.append("    frontLoadingAmount: ").append(toIndentedString(frontLoadingAmount)).append("\n");
    sb.append("    glAccounts: ").append(toIndentedString(glAccounts)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    onSettlement: ").append(toIndentedString(onSettlement)).append("\n");
    sb.append("    payCarryoverafterMonths: ").append(toIndentedString(payCarryoverafterMonths)).append("\n");
    sb.append("    ptOBankID: ").append(toIndentedString(ptOBankID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

